/**
 * There are <a href="https://github.com/thinkgem/jeesite">JeeSite</a> code generation
 */
package com.thinkgem.jeesite.modules.ip.service;

import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.service.BaseService;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.ip.entity.OrganizationDirector;
import com.thinkgem.jeesite.modules.ip.dao.OrganizationDirectorDao;

/**
 * 分管单位设置Service
 * @author Generate Tools
 * @version 2016-06-21
 */
@Component
@Transactional(readOnly = true)
public class OrganizationDirectorService extends BaseService {

	@Autowired
	private OrganizationDirectorDao organizationDirectorDao;
	
	public OrganizationDirector get(String id) {
		return organizationDirectorDao.get(id);
	}
	
	public Page<OrganizationDirector> find(Page<OrganizationDirector> page, OrganizationDirector organizationDirector) {
		DetachedCriteria dc = organizationDirectorDao.createDetachedCriteria();
		if (StringUtils.isNotEmpty(organizationDirector.getZg_id())){
			dc.add(Restrictions.like("zggrxx_id", "%"+organizationDirector.getZg_id()+"%"));
		}
		dc.add(Restrictions.eq(OrganizationDirector.FIELD_DEL_FLAG, OrganizationDirector.DEL_FLAG_NORMAL));
		dc.addOrder(Order.desc("id"));
		return organizationDirectorDao.find(page, dc);
	}
	
	@Transactional(readOnly = false)
	public void save(OrganizationDirector organizationDirector) {
		organizationDirectorDao.save(organizationDirector);
	}
	
	@Transactional(readOnly = false)
	public void delete(String id) {
		organizationDirectorDao.deleteById(id);
	}
	
}
